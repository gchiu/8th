\ An annoying example of "task-n".  It starts two tasks, one which prints "a"
\ every second, and the other prints "b" twice a second

quote |
This program will create three tasks:

The first will print 'a' every second.

The second will print 'b' twice a second.

The third will wait for ten seconds, then kill 8th.
| . cr

var task.a1
var task.a2
var task.b
var task.c

\ NOTE: you need to have the 'cr' because 8th uses buffered I/O:
: a  \ str -- 
  repeat 1 sleep dup . cr again ;
: b ( 0.5 sleep 'b putc  cr ) 10 times 
	10 sleep  "\ntask b got signal, quitting\n" . 
	0 die ;
: c 10 sleep cr "\ntask c signalling...\n" . task.b @ t:notify ;


: app:main
	"Going to start tasks\n" .
\ the 'a' task will get two items on it's stack:
	100 "A1" 2 ' a t:task-n task.a1 !
	101 "A2" 2 ' a t:task-n task.a2 !
  .s cr
	' b t:task task.b !
	' c t:task task.c !

	"all tasks started, waiting to die...\n" . ;
